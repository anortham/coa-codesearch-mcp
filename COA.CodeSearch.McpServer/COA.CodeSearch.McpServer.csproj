<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>

    <!-- Enable XML documentation generation for enhanced MCP tool descriptions -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Suppress CS1591 (missing XML documentation) as this is an internal tool, not a public API -->
    <NoWarn>$(NoWarn);CS1591</NoWarn>

    <!-- Global dotnet tool configuration -->
    <IsPackable>true</IsPackable>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>codesearch</ToolCommandName>
    <PackageId>COA.CodeSearch</PackageId>
    <Version>2.1.8</Version>
    <Authors>COA Team</Authors>
    <Company>COA Team</Company>
    <Description>High-performance file search MCP server with Lucene.NET backend for Claude Code integration</Description>
    <PackageTags>mcp;claude-code;search;lucene;dotnet-tool;code-search</PackageTags>
    <PackageProjectUrl>https://github.com/anortham/coa-codesearch-mcp</PackageProjectUrl>
    <RepositoryUrl>https://github.com/anortham/coa-codesearch-mcp</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <Copyright>Copyright (c) 2024 COA Team</Copyright>
  </PropertyGroup>

  <ItemGroup>
    <!-- COA Framework NuGet package references -->
    <PackageReference Include="COA.Mcp.Framework" Version="2.1.27" />
    <PackageReference Include="COA.Mcp.Framework.TokenOptimization" Version="2.1.27" />

    <!-- VS Code Bridge integration -->
    <PackageReference Include="COA.Mcp.VSCodeBridge" Version="1.1.0" />
    
    <!-- Lucene.NET for search functionality -->
    <PackageReference Include="Lucene.Net" Version="4.8.0-beta00017" />
    <PackageReference Include="Lucene.Net.Analysis.Common" Version="4.8.0-beta00017" />
    <PackageReference Include="Lucene.Net.QueryParser" Version="4.8.0-beta00017" />
    <PackageReference Include="Lucene.Net.Highlighter" Version="4.8.0-beta00017" />

    <!-- SQLite for symbol storage -->
    <PackageReference Include="Microsoft.Data.Sqlite" Version="9.0.0" />

    <!-- Diff/Patch operations -->
    <PackageReference Include="DiffMatchPatch" Version="4.0.0" />
    <PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.23.0" />
    
    <!-- Logging -->
    <PackageReference Include="Serilog" Version="4.2.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="9.0.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="9.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    
    
    <!-- Core dependencies -->
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <!-- Embed template as resource -->
    <EmbeddedResource Include="..\Templates\codesearch-instructions.scriban">
      <LogicalName>COA.CodeSearch.McpServer.Templates.codesearch-instructions.scriban</LogicalName>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <!-- Bundle julie-codesearch binaries for all platforms -->
    <!-- These are cross-compiled Rust binaries tracked with Git LFS -->
    <!-- Copied to bin/julie-binaries/ in output directory -->
    <!-- NOTE: Conditionally included - only if files exist (allows local dev without all platforms) -->

    <!-- macOS ARM64 (M1/M2/M3 Macs) -->
    <Content Include="..\bin\julie-binaries\julie-codesearch-macos-arm64" Condition="Exists('..\bin\julie-binaries\julie-codesearch-macos-arm64')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-codesearch-macos-arm64</Link>
    </Content>

    <!-- macOS x64 (Intel Macs) - Not built yet, placeholder -->
    <Content Include="..\bin\julie-binaries\julie-codesearch-macos-x64" Condition="Exists('..\bin\julie-binaries\julie-codesearch-macos-x64')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-codesearch-macos-x64</Link>
    </Content>

    <!-- Linux x64 -->
    <Content Include="..\bin\julie-binaries\julie-codesearch-linux-x64" Condition="Exists('..\bin\julie-binaries\julie-codesearch-linux-x64')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-codesearch-linux-x64</Link>
    </Content>

    <!-- Windows x64 -->
    <Content Include="..\bin\julie-binaries\julie-codesearch-windows-x64.exe" Condition="Exists('..\bin\julie-binaries\julie-codesearch-windows-x64.exe')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-codesearch-windows-x64.exe</Link>
    </Content>

    <!-- Bundle julie-semantic binaries for all platforms -->
    <!-- Used for semantic search and embeddings (Phase 2) -->

    <!-- macOS ARM64 -->
    <Content Include="..\bin\julie-binaries\julie-semantic-macos-arm64" Condition="Exists('..\bin\julie-binaries\julie-semantic-macos-arm64')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-semantic-macos-arm64</Link>
    </Content>

    <!-- Linux x64 -->
    <Content Include="..\bin\julie-binaries\julie-semantic-linux-x64" Condition="Exists('..\bin\julie-binaries\julie-semantic-linux-x64')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-semantic-linux-x64</Link>
    </Content>

    <!-- Windows x64 -->
    <Content Include="..\bin\julie-binaries\julie-semantic-windows-x64.exe" Condition="Exists('..\bin\julie-binaries\julie-semantic-windows-x64.exe')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/julie-binaries/julie-semantic-windows-x64.exe</Link>
    </Content>
  </ItemGroup>

  <ItemGroup Label="sqlite-vec Extension Binaries">
    <!-- Bundle sqlite-vec extension binaries for all platforms -->
    <!-- These are precompiled SQLite extensions for vector similarity search -->
    <!-- Copied to bin/sqlite-vec/ in output directory -->

    <!-- macOS ARM64 (M1/M2/M3 Macs) -->
    <Content Include="bin\sqlite-vec\macos-arm64\vec0.dylib" Condition="Exists('bin\sqlite-vec\macos-arm64\vec0.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/sqlite-vec/macos-arm64/vec0.dylib</Link>
    </Content>

    <!-- macOS x64 (Intel Macs) -->
    <Content Include="bin\sqlite-vec\macos-x64\vec0.dylib" Condition="Exists('bin\sqlite-vec\macos-x64\vec0.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/sqlite-vec/macos-x64/vec0.dylib</Link>
    </Content>

    <!-- Linux x64 -->
    <Content Include="bin\sqlite-vec\linux-x64\vec0.so" Condition="Exists('bin\sqlite-vec\linux-x64\vec0.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/sqlite-vec/linux-x64/vec0.so</Link>
    </Content>

    <!-- Linux ARM64 -->
    <Content Include="bin\sqlite-vec\linux-arm64\vec0.so" Condition="Exists('bin\sqlite-vec\linux-arm64\vec0.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/sqlite-vec/linux-arm64/vec0.so</Link>
    </Content>

    <!-- Windows x64 -->
    <Content Include="bin\sqlite-vec\windows-x64\vec0.dll" Condition="Exists('bin\sqlite-vec\windows-x64\vec0.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>bin/sqlite-vec/windows-x64/vec0.dll</Link>
    </Content>
  </ItemGroup>

</Project>