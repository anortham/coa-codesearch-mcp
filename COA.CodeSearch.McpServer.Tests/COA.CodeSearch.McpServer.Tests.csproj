<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <!-- Disable XML documentation generation for test projects -->
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <!-- Suppress common test warnings that don't affect test reliability -->
    <NoWarn>CS8602;CS1998;NUnit1033</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <!-- COA Framework Testing - NuGet package reference -->
    <PackageReference Include="COA.Mcp.Framework.Testing" Version="2.1.27" />
    <PackageReference Include="DiffPlex" Version="1.8.0" />
    <PackageReference Include="FluentAssertions" Version="7.2.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
    <PackageReference Include="Moq" Version="4.20.72" />
    <PackageReference Include="NSubstitute" Version="5.1.0" />
    <PackageReference Include="NUnit" Version="4.3.2" />
    <PackageReference Include="NUnit3TestAdapter" Version="4.6.0" />
    <PackageReference Include="NUnit.Analyzers" Version="4.4.0" />
    <PackageReference Include="coverlet.collector" Version="6.0.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\COA.CodeSearch.McpServer\COA.CodeSearch.McpServer.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- Exclude C# files in Resources from compilation - they are test data only -->
    <Compile Remove="Resources\**\*.cs" />
    <None Include="Resources\**\*.cs" />
    <None Include="Resources\**\*.py" />
    <None Include="Resources\**\*.json" />
    <None Include="Resources\**\*.yml" />
    <None Include="Resources\**\*.md" />
  </ItemGroup>

  <ItemGroup>
    <!-- Copy real-world test files to output directory for type extraction tests -->
    <Content Include="Resources\TypeExtraction\RealWorld\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- Copy tree-sitter native libraries from main project to test output -->
  <Target Name="CopyTreeSitterNatives" AfterTargets="Build">
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      <TreeSitterFiles Include="$(OutDir)..\..\..\..\COA.CodeSearch.McpServer\bin\$(Configuration)\$(TargetFramework)\tree-sitter*.dll" />
      <TreeSitterFiles Include="$(OutDir)..\..\..\..\COA.CodeSearch.McpServer\bin\$(Configuration)\$(TargetFramework)\TreeSitter.dll" />
    </ItemGroup>
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      <TreeSitterFiles Include="$(OutDir)..\..\..\..\COA.CodeSearch.McpServer\bin\$(Configuration)\$(TargetFramework)\libtree-sitter*.so" />
    </ItemGroup>
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <TreeSitterFiles Include="$(OutDir)..\..\..\..\COA.CodeSearch.McpServer\bin\$(Configuration)\$(TargetFramework)\libtree-sitter*.dylib" />
    </ItemGroup>
    <Copy SourceFiles="@(TreeSitterFiles)" DestinationFolder="$(OutDir)" SkipUnchangedFiles="true" />
    
    <!-- Optional: Skip type-extraction tests gracefully if native libs are missing -->
    <Message Text="TreeSitter native libraries copied: @(TreeSitterFiles->'%(Filename)%(Extension)')" Importance="normal" />
  </Target>

</Project>